!function (t) { "function" == typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], function (e) { return t(e, window, document) }) : "object" == typeof exports ? module.exports = function (e, n) { return e || (e = window), n && n.fn.dataTable || (n = require("datatables.net")(e, n).$), n.fn.dataTable.Buttons || require("datatables.net-buttons")(e, n), t(n, e, e.document) } : t(jQuery, window, document) }(function (t, e, n, o) { "use strict"; var a = t.fn.dataTable, r = n.createElement("a"), i = function (t) { r.href = t; var e = r.host; return -1 === e.indexOf("/") && 0 !== r.pathname.indexOf("/") && (e += "/"), r.protocol + "//" + e + r.pathname + r.search }; return a.ext.buttons.print = { className: "buttons-print", text: function (t) { return t.i18n("buttons.print", "Print") }, action: function (n, o, a, r) { var u = o.buttons.exportData(r.exportOptions), d = function (t, e) { for (var n = "<tr>", o = 0, a = t.length; o < a; o++)n += "<" + e + ">" + t[o] + "</" + e + ">"; return n + "</tr>" }, s = '<table class="' + o.table().node().className + '">'; if (r.header) { var c = t(o.table().header()), f = t("<thead>"); c.find("tr").map(function () { var e = t("<tr>"); return t(this).find("th").map(function () { var e = t(this); return t("<th>").attr({ colspan: e.attr("colspan"), rowspan: e.attr("rowspan") }).text(e.text())[0] }).appendTo(e), e[0] }).appendTo(f), s += "<thead>" + f.html() + "</thead>" } s += "<tbody>"; for (var l = 0, p = u.body.length; l < p; l++)s += d(u.body[l], "td"); s += "</tbody>", r.footer && u.footer && (s += "<tfoot>" + d(u.footer, "th") + "</tfoot>"); var h = e.open("", ""), m = r.title; "function" == typeof m && (m = m()), -1 !== m.indexOf("*") && (m = m.replace("*", t("title").text())), h.document.close(); var b = "<title>" + m + "</title>"; t("style, link").each(function () { var e; b += ("link" === (e = t(this).clone()[0]).nodeName.toLowerCase() && (e.href = i(e.href)), e.outerHTML) }); try { h.document.head.innerHTML = b } catch (n) { t(h.document.head).html(b) } h.document.body.innerHTML = "<h1>" + m + "</h1><div>" + ("function" == typeof r.message ? r.message(o, a, r) : r.message) + "</div>" + s, t(h.document.body).addClass("dt-print-view"), t("img", h.document.body).each(function (t, e) { e.setAttribute("src", i(e.getAttribute("src"))) }), r.customize && r.customize(h), setTimeout(function () { r.autoPrint && (h.print(), h.close()) }, 250) }, title: "*", message: "", exportOptions: {}, header: !0, footer: !1, autoPrint: !0, customize: null }, a.Buttons });