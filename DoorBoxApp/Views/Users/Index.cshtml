@using Microsoft.AspNetCore.Identity
@model IEnumerable<DoorBoxApp.Models.Common.Authentication.ApplicationUser>
@inject UserManager<DoorBoxApp.Models.Common.Authentication.ApplicationUser> UserManager

@{
    var user = await UserManager.FindByNameAsync(Context.User.Identity.Name);
    var userId = (await UserManager.FindByNameAsync(Context.User.Identity.Name)).Id;
}

@{
    ViewData["Title"] = "All Users";
}

@section Css {
    @{await Html.RenderPartialAsync("_DataTableCssPartial");}
}

@section Sole {
    <style>
        .table tr th:first-child {
            width: 30px;
        }

        .table tr th:last-child {
            width: 50px;
        }

        .table tr th {
            text-align: center;
        }
    </style>
}

<div class="container-fluid mt-4">
    <div class="card animated fadeIn overflow-hidden">
        <div class="card-header p-3">
            <div class="row align-items-center">
                <div class="col">
                    <h3 class="mb-0 skewed skewed-yellow text-white d-inline-block text-uppercase ls-1">@ViewData["Title"]</h3>
                </div>
                <div class="col text-right">
                    <a asp-controller="Account" asp-action="Register" class="btn btn-create">Create</a>
                </div>
            </div>
        </div>
        <div class="card-body px-0 pb-2">
            <div class="">
                <table id="load-table" class="table align-items-center table-hover table-striped table-bordered border-left-0 border-right-0"></table>
            </div>
        </div>
    </div>
</div>

@*<ul>
    @{
        for (int i = 0; i < 2000; i++)
        {
            <li>
                @Guid.NewGuid().ToString()
            </li>
        }
    }
</ul>*@


@section Scripts {
    <script asp-append-version="true" type="text/javascript" src="~/vendor/datatable/js/jquery.dataTables.min.js"></script>
    <script asp-append-version="true" type="text/javascript" src="~/vendor/datatable/js/dataTables.bootstrap4.min.js"></script>
    <script type="text/javascript">
        $("#load-table").DataTable({
            dom: "<'row mx-0 before-table-responsive'<'col-sm-12 col-md-8 px-lg-0'<'d-inline-flex'l>><'col-sm-12 col-md-4'f>>" +
                "<'row mx-0'<'col-md-6'><'col-md-6'>>" +
                "<'row mx-0 table-responsive-on-hover'<'col-md-12 px-0'tr>><'row after-table-responsive mx-0'<'col-sm-12 col-md-5 pl-0'i><'col-sm-12 col-md-7 pr-0'p>>",
            responsive: !0,
            //scrollX: !0,
            order: [],
            language: {
                paginate: {
                    previous: "<i class='fas fa-angle-left'>",
                    next: "<i class='fas fa-angle-right'>",
                }
            },
            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
            autoWidth: !1,
            stateSave: !0,
            stateDuration: 0,
            stateSaveParams: function (settings, data) {
                delete data.order;
            },
            processing: !0,
            serverSide: !0,
            paging: !0,
            searching: {
                regex: !0
            },
            ajax: {
                url: "/Users/LoadTable",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    return JSON.stringify(d);
                }
            },
            columns: [
                {
                    title: "S/N",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "userName",
                    title: "User Name",
                    className: "text-wrap",
                },
                {
                    data: "email",
                    title: "E-Mail"
                },
                //{
                //    data: "gateName",
                //    title: "Phone"
                //},
                //{
                //    data: "yardName",
                //    title: "Address",
                //    className: "text-wrap",
                //},
                //{
                //    data: "userTypeName",
                //    title: "Address",
                //    className: "text-wrap",
                //},
                {
                    data: "id",
                    title: "Action",
                    className: "text-center",
                    render: function (data, type, row, meta) {
                        return '<div class="btn-group">' +
                            '<a class="btn btn-default btn-sm" href="/Users/Edit/' + data + '">Edit</a>' +
                            '</div>';
                    }
                }
            ],
            columnDefs: [
                {
                    orderable: !1,
                    searchable: !1,
                    targets: [0, -1],
                }
            ],
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}